# nginx.conf

# Define a server block for handling requests.
server {
    # Nginx will listen on port 80 inside the container.
    # Home Assistant's Ingress will automatically map this port to the user.
    listen 80;

    # =====================================================================
    # Location 1: Serve the static React/Vite frontend
    # This block handles all requests that are not for the API.
    # =====================================================================
    location / {
        # 'root' points to the directory where we copied our built frontend files
        # inside the Dockerfile (COPY --from=builder /app/dist ./static_root/).
        root   /app/static_root;

        # The default file to serve is index.html.
        index  index.html;

        # This is the key for Single-Page Applications (SPAs) like React.
        # It tells Nginx to first try to find a file matching the request URI ($uri),
        # then a directory ($uri/), and if neither exists, fall back to serving /index.html.
        # This allows React Router to handle all client-side routes (e.g., /dashboard, /settings).
        try_files $uri $uri/ /index.html;

        # Add cache-control headers to prevent caching of the index.html file.
        if ($uri = '/index.html') {
            add_header Cache-Control 'no-cache, no-store, must-revalidate';
        }
    }

    # =====================================================================
    # Location 2: Reverse Proxy for the Django API
    # This block intercepts any request whose path starts with /api/
    # and forwards it to the Django backend.
    # =====================================================================
    location /api/ {
        # Forward requests to the Gunicorn server.
        # We are using a Unix socket for efficient communication within the container.
        # This socket path must match the 'bind' address in your run.sh Gunicorn command.
        proxy_pass http://unix:/tmp/gunicorn.sock;

        # Set headers to pass along important information to Django,
        # such as the original host and the client's IP address.
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # =====================================================================
    # Optional Location 3: Serve Django's Admin Static Files
    # This is only needed if you plan to use the Django Admin interface.
    # =====================================================================
    location /static/ {
        # The 'alias' directive maps this URL path to the directory where
        # Django's 'collectstatic' command placed the admin's CSS and JS files.
        alias /app/staticfiles/;
    }
}
